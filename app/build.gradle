apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.learn.zip'
apply plugin: 'android-aspectjx'



def librarys = rootProject.ext.dependencies
def androidX = rootProject.ext.androidX
def versions = rootProject.ext.versions

android {
    compileSdkVersion versions.compileSdkVersion
    buildToolsVersion versions.buildToolsVersion

    defaultConfig {
        applicationId versions.applicationId
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode versions.versionCode
        versionName versions.versionName

        ndk {
            abiFilters  "armeabi-v7a"
        }

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }
    buildFeatures {
        dataBinding true
        viewBinding = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }


    kotlinOptions{
        jvmTarget = "1.8"
    }

    //这是官网样例
    aspectjx {
        exclude 'versions.9'
        exclude 'com.squareup'
        exclude 'leakcanary'
        exclude 'com.taobao'
        exclude 'com.ut'
    }
}


dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'



    implementation project(path: ':plugin_base')
    implementation project(path: ':plugin_common')

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    if (isLirary.toBoolean()) {
        implementation project(path: ':module_account_book')
        implementation project(path: ':module_login')
        implementation project(path: ':module_task')
        implementation project(path: ':module_diary')
        implementation project(path: ':module_setting')
    }

//    implementation "androidx.datastore:datastore-preferences:1.0.0-alpha06"
//    implementation "androidx.datastore:datastore-preferences-core:1.0.0-alpha06"


    implementation librarys.lifecycle_extensions

    /**
     *  沉浸式导航栏
     */
    api librarys.immersionbar
    api librarys.immersionbar_components

    /**
     * 快速解析View butterKnife
     */
    implementation librarys.butterKnife_support
    annotationProcessor librarys.butterKnife_compiler

    /**
     * androidXUI导航
     */
    api androidX.androidx_navigation_ragment_ktx
    api androidX.androidx_navigation_ui_ktx
    /**
     * 报表
     */
    api librarys.MPchart

    implementation "com.alibaba:arouter-api:1.4.1"
    kapt "com.alibaba:arouter-compiler:1.2.2"

    implementation "com.google.dagger:hilt-android:2.38"
    kapt "com.google.dagger:hilt-android-compiler:2.38"

    implementation google.auto_service
    kapt google.auto_service

//    implementation librarys.okhttp
    implementation "com.squareup.okhttp3:okhttp:3.7.0"

    implementation 'org.aspectj:aspectjrt:1.8.9'

}

